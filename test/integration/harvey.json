{
	"requestTemplates": [
		{
			"id": "base",
			"protocol": "${protocol}",
			"host": "${host}"
		},
		{
			"id": "json",
			"headers": {
				"content-type": "application/json"
			}
		},
		{
			"id": "form",
			"headers": {
				"content-type": "application/x-www-form-urlencoded"
			}
		},
		{
			"id": "adminAuthTokenHeader",
			"headers": {
				"authorization": "${adminAccessToken}"
			}
		},
		{
			"id": "nonAdminAuthTokenHeader",
			"headers": {
				"authorization": "${nonAdminAccessToken}"
			}
		},
		{
			"id": "authTokenHeader",
			"headers": {
				"authorization": "${accessToken}"
			}
		},
		{
			"id": "postClientBody",
			"body": {
				"email": "test@test.com",
				"clientId": "${testClientId}"
			}
		},
		{
			"id": "putClientBody",
			"body": {
				"email": "test@test.com",
				"clientId": "${testClientId}",
				"isConfirmed": true,
				"isAdmin": false
			}
		},
		{
			"id": "postConfigBody",
			"body": {
				"name": "${configName1}",
				"value": "fnord",
				"associations": {
					"applications": [],
					"environments": []
				},
				"isActive": true,
				"isSensitive": false
			}
		},
		{
			"id": "putConfigBody",
			"body": {
				"id": "${configId}",
				"name": "${configName1}",
				"value": "fnord2",
				"associations": {
					"applications": [],
					"environments": []
				},
				"isActive": true,
				"isSensitive": false,
				"owner": "${adminClientId}"
			}
		},
		{
			"id": "putInvalidConfigBody",
			"body": {
				"id": "${configId}",
				"name": "${configName1}"
			}
		},
		{
			"id": "putNonExistentConfigBody",
			"body": {
				"id": "${nonExistentConfigId}",
				"name": "${configName1}",
				"value": "fnord2",
				"associations": {
					"applications": [],
					"environments": []
				},
				"isActive": true,
				"isSensitive": false,
				"owner": "${adminClientId}"
			}
		},
		{
			"id": "postInvalidConfigBody",
			"body": {
				"fnord": "unknown"
			}
		},
		{
			"id": "postEnvironmentConfigBody1",
			"body": {
				"name": "${configName1}",
				"value": "fnord1",
				"associations": {
					"applications": [],
					"environments": ["dev"]
				},
				"isActive": true,
				"isSensitive": false
			}
		},
		{
			"id": "postEnvironmentConfigBody2",
			"body": {
				"name": "${configName2}",
				"value": "fnord2",
				"associations": {
					"applications": [],
					"environments": ["staging"]
				},
				"isActive": true,
				"isSensitive": true
			}
		},
		{
			"id": "postEnvironmentConfigBody3",
			"body": {
				"name": "${configName3}",
				"value": "fnord3",
				"associations": {
					"applications": [],
					"environments": ["production"]
				},
				"isActive": false,
				"isSensitive": false
			}
		},
		
		{
			"id": "postApplicationConfigBody1",
			"body": {
				"name": "${configName1}",
				"value": {
					"test.dots": "fnord"
				},
				"associations": {
					"applications": [{
						"name": "myapp",
						"versions": ["1.0.0"]
					}],
					"environments": []
				},
				"isActive": true,
				"isSensitive": false
			}
		},
		{
			"id": "postApplicationConfigBody2",
			"body": {
				"name": "${configName2}",
				"value": "fnord2",
				"associations": {
					"applications": [{
						"name": "myapp",
						"versions": ["2.0.0"]
					}],
					"environments": []
				},
				"isActive": true,
				"isSensitive": true
			}
		},
		{
			"id": "postApplicationConfigBody3",
			"body": {
				"name": "${configName3}",
				"value": "fnord3",
				"associations": {
					"applications": [{
						"name": "myotherapp",
						"versions": ["1.0.0"]
					}],
					"environments": []
				},
				"isActive": false,
				"isSensitive": false
			}
		},

		{
			"id": "postEnvironmentAndApplicationConfigBody",
			"body": {
				"name": "${configName4}",
				"value": "fnord4",
				"associations": {
					"applications": [{
						"name": "myapp",
						"versions": ["3.0.0"]
					}],
					"environments": ["production"]
				},
				"isActive": true,
				"isSensitive": false
			}
		}
		
	],






	"responseTemplates": [
		{
			"id": "json",
			"headers": {
				"content-type": "application/json; charset=utf-8"
			}
		},
		{
			"id": "errorBody",
			"body": {
				"code": { "$exists": true },
				"error": { "$exists": true }
			}
		},
		{
			"id": "createdClient",
			"statusCode": 201,
			"headers": {
				"location": { "$regex": "clients/${testClientId}" }
			}
		},
		{
			"id": "createdConfig",
			"statusCode": 201,
			"headers": {
				"location": { "$regex": "config/[0-9a-f]{24}" }
			}
		}
	],






	"setupAndTeardowns":[
		{
			"id": "getRandomClientId",
			"actions": [{
				"$set": {
					"testClientId": {
						"$random": {
							"type": "string",
							"length": 10,
							"characters": "abcdefghijklmnopqrstuvwxyz"
						}
					}
				}
			}]
		},
		{
			"id": "getRandomConfigNames",
			"actions": [{
				"$set": {
					"configName1": {
						"$random": {
							"type": "string",
							"length": 10
						}
					},
					"configName2": {
						"$random": {
							"type": "string",
							"length": 11
						}
					},
					"configName3": {
						"$random": {
							"type": "string",
							"length": 12
						}
					},
					"configName4": {
						"$random": {
							"type": "string",
							"length": 13
						}
					}
				}
			}]
		},
		{
			"id": "getTimestamp",
			"actions": [{
				"$set": {
					"timestamp": {
						"$now": {}
					}
				}
			}]
		},
		{
			"id": "getAdminSignature",
			"actions": [{
				"$set": {
					"adminSignature": {
						"$crypto": {
							"macType": "HMAC",
							"algorithm": "sha1",
							"data": "${adminClientId}:${timestamp}",
							"key": "${adminKey}",
							"encoding": "hex"
						}
					}
				}
			}]
		},
		{
			"id": "getNonAdminSignature",
			"actions": [{
				"$set": {
					"nonAdminSignature": {
						"$crypto": {
							"macType": "HMAC",
							"algorithm": "sha1",
							"data": "${nonAdminClientId}:${timestamp}",
							"key": "${nonAdminClientKey}",
							"encoding": "hex"
						}
					}
				}
			}]
		},
		{
			"id": "getAdminToken",
			"request": {
				"templates": ["base", "form"],
				"method": "POST",
				"resource": "/token",
				"body": {
					"grant_type": "client_credentials",
					"client_id": "${adminClientId}",
					"timestamp": "${timestamp}",
					"signature": "${adminSignature}"
				}
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200
			},
			"actions": [{
				"$set": {
					"adminAccessToken": {
						"$extract": "body.access_token"
					}
				}
			}]
		},
		{
			"id": "createNonAdminClient",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "POST",
				"resource": "/clients",
				"body": {
					"email": "fnord@test.com",
					"clientId": "${nonAdminClientId}"
				}
			},
			"expectedResponse": {
				"templates": [],
				"statusCode": 201,
				"headers": {
					"location": { "$regex": "clients/${nonAdminClientId}" }
				}
			}
		},
		{
			"id": "getNonAdminClient",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/clients/${nonAdminClientId}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200
			},
			"actions": [{
				"$set": {
					"nonAdminClientKey": {
						"$extract": "body.sharedKey"
					}
				}
			}]
		},
		{
			"id": "getNonAdminToken",
			"request": {
				"templates": ["base", "form"],
				"method": "POST",
				"resource": "/token",
				"body": {
					"grant_type": "client_credentials",
					"client_id": "${nonAdminClientId}",
					"timestamp": "${timestamp}",
					"signature": "${nonAdminSignature}"
				}
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200
			},
			"actions": [{
				"$set": {
					"nonAdminAccessToken": {
						"$extract": "body.access_token"
					}
				}
			}]
		},
		{
			"id": "removeClient",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/clients/${testClientId}"
			},
			"expectedResponse": {
				"statusCode": 204
			}
		},
		{
			"id": "removeNonAdminClient",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/clients/${nonAdminClientId}"
			},
			"expectedResponse": {
				"statusCode": 204
			}
		},
		{
			"id": "createClient",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postClientBody"],
				"method": "POST",
				"resource": "/clients"
			},
			"expectedResponse": {
				"templates": ["createdClient"]
			}
		},
		{
			"id": "createGenericEnvironmentConfig",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postEnvironmentConfigBody1"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["createdConfig"]
			},
			"actions": [{
				"$set": {
					"configId": {
						"$replace": {
							"value": {
								"$extract": "headers.location"
							},
							"regex": "^.*/config/(.*)$",
							"replacement": "$1"
						}
					}
				}
			}]
		},
		{
			"id": "createEnvironmentConfig1",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postEnvironmentConfigBody1"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["createdConfig"]
			},
			"actions": [{
				"$set": {
					"envConfigId1": {
						"$replace": {
							"value": {
								"$extract": "headers.location"
							},
							"regex": "^.*/config/(.*)$",
							"replacement": "$1"
						}
					}
				}
			}]
		},
		{
			"id": "removeEnvironmentConfig1",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/config/${envConfigId1}"
			},
			"expectedResponse": {
				"statusCode": 204
			}
		},
		{
			"id": "createEnvironmentConfig2",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postEnvironmentConfigBody2"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["createdConfig"]
			},
			"actions": [{
				"$set": {
					"envConfigId2": {
						"$replace": {
							"value": {
								"$extract": "headers.location"
							},
							"regex": "^.*/config/(.*)$",
							"replacement": "$1"
						}
					}
				}
			}]
		},
		{
			"id": "removeEnvironmentConfig2",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/config/${envConfigId2}"
			},
			"expectedResponse": {
				"statusCode": 204
			}
		},
		{
			"id": "createEnvironmentConfig3",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postEnvironmentConfigBody3"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["createdConfig"]
			},
			"actions": [{
				"$set": {
					"envConfigId3": {
						"$replace": {
							"value": {
								"$extract": "headers.location"
							},
							"regex": "^.*/config/(.*)$",
							"replacement": "$1"
						}
					}
				}
			}]
		},
		{
			"id": "removeEnvironmentConfig3",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/config/${envConfigId3}"
			},
			"expectedResponse": {
				"statusCode": 204
			}
		},
		{
			"id": "createGenericApplicationConfig",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postApplicationConfigBody1"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["createdConfig"]
			},
			"actions": [{
				"$set": {
					"configId": {
						"$replace": {
							"value": {
								"$extract": "headers.location"
							},
							"regex": "^.*/config/(.*)$",
							"replacement": "$1"
						}
					}
				}
			}]
		},
		{
			"id": "createApplicationConfig1",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postApplicationConfigBody1"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["createdConfig"]
			},
			"actions": [{
				"$set": {
					"appConfigId1": {
						"$replace": {
							"value": {
								"$extract": "headers.location"
							},
							"regex": "^.*/config/(.*)$",
							"replacement": "$1"
						}
					}
				}
			}]
		},
		{
			"id": "removeApplicationConfig1",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/config/${appConfigId1}"
			},
			"expectedResponse": {
				"statusCode": 204
			}
		},
		{
			"id": "createApplicationConfig2",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postApplicationConfigBody2"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["createdConfig"]
			},
			"actions": [{
				"$set": {
					"appConfigId2": {
						"$replace": {
							"value": {
								"$extract": "headers.location"
							},
							"regex": "^.*/config/(.*)$",
							"replacement": "$1"
						}
					}
				}
			}]
		},
		{
			"id": "removeApplicationConfig2",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/config/${appConfigId2}"
			},
			"expectedResponse": {
				"statusCode": 204
			}
		},
		{
			"id": "createApplicationConfig3",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postApplicationConfigBody3"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["createdConfig"]
			},
			"actions": [{
				"$set": {
					"appConfigId3": {
						"$replace": {
							"value": {
								"$extract": "headers.location"
							},
							"regex": "^.*/config/(.*)$",
							"replacement": "$1"
						}
					}
				}
			}]
		},
		{
			"id": "removeApplicationConfig3",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/config/${appConfigId3}"
			},
			"expectedResponse": {
				"statusCode": 204
			}
		},
		{
			"id": "removeConfig",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"statusCode": 204
			}
		},
		{
			"id": "createEnvironmentAndApplicationConfig",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postEnvironmentAndApplicationConfigBody"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["createdConfig"]
			},
			"actions": [{
				"$set": {
					"envAndAppConfigId": {
						"$replace": {
							"value": {
								"$extract": "headers.location"
							},
							"regex": "^.*/config/(.*)$",
							"replacement": "$1"
						}
					}
				}
			}]
		},
		{
			"id": "removeEnvironmentAndApplicationConfig",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/config/${envAndAppConfigId}"
			},
			"expectedResponse": {
				"statusCode": 204
			}
		},
		{
			"id": "verifyConfigCreated",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": {
					"id": "${configId}"
				}
			}
		},
		{
			"id": "verifyConfigDeleted",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 404
			}
		},
		{
			"id": "countInitialConfig",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200
			},
			"actions": [{
				"$set": {
					"initialConfigCount": {
						"$extract": "body.length"
					}
				}
			}]
		},
		{
			"id": "verifyTestDataDeleted",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": { "$length": "${initialConfigCount}" }
			}
		}
	],






	"suiteSetup": [
		"getTimestamp",
		"getAdminSignature",
		"getAdminToken",
		"createNonAdminClient",
		"getNonAdminClient",
		"getNonAdminSignature",
		"getNonAdminToken",
		"countInitialConfig"
	],






	"suiteTeardown": [
		"removeNonAdminClient",
		"verifyTestDataDeleted"
	],







	"tests": [
		{
			"id": "createClient_Success",
			"setup": ["getRandomClientId"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postClientBody"],
				"method": "POST",
				"resource": "/clients"
			},
			"expectedResponse": {
				"templates": ["createdClient"]
			},
			"teardown": ["removeClient"]
		},
		{
			"id": "createClient-invalidData_BadRequest",
			"setup": ["getRandomClientId"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postClientBody"],
				"method": "POST",
				"resource": "/clients",
				"body": {
					"invalid": "data"
				}
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400,
				"body": {
					"message": { "$regex": "payload parameters validation error" }
				}
			}
		},
		{
			"id": "createClient-missingData_BadRequest",
			"setup": ["getRandomClientId"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "POST",
				"resource": "/clients",
				"body": {
					"clientId": "${testClientId}"
				}
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400,
				"body": {
					"message": { "$regex": "payload parameters validation error" }
				}
			}
		},
		{
			"id": "getClient_Success",
			"setup": ["getRandomClientId", "createClient"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/clients/${testClientId}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200
			},
			"teardown": ["removeClient"]
		},
		{
			"id": "getClient_NotFound",
			"setup": ["getRandomClientId"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/clients/${testClientId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 404
			}
		},
		{
			"id": "updateClient_Success",
			"setup": ["getRandomClientId", "createClient"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "putClientBody"],
				"method": "PUT",
				"resource": "/clients/${testClientId}"
			},
			"expectedResponse": {
				"statusCode": 204
			},
			"teardown": ["removeClient"]
		},
		{
			"id": "updateClient-invalidData_BadRequest",
			"setup": ["getRandomClientId", "createClient"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "putClientBody"],
				"method": "PUT",
				"resource": "/clients/${testClientId}",
				"body": {
					"invalid": "data"
				}
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400,
				"body": {
					"message": { "$regex": "payload parameters validation error" }
				}
			},
			"teardown": ["removeClient"]
		},
		{
			"id": "updateClient-missingData_BadRequest",
			"setup": ["getRandomClientId", "createClient"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "PUT",
				"resource": "/clients/${testClientId}",
				"body": {
					"email": "test@test.com"
				}
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400,
				"body": {
					"message": { "$regex": "payload parameters validation error" }
				}
			},
			"teardown": ["removeClient"]
		},
		{
			"id": "updateClient_NotFound",
			"setup": ["getRandomClientId"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "PUT",
				"resource": "/clients/${testClientId}",
				"body": {
					"email": "test@test.com",
					"clientId": "${testClientId}",
					"isConfirmed": true,
					"isAdmin": false
				}
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 404
			}
		},
		{
			"id": "removeClient_Success",
			"setup": ["getRandomClientId", "createClient"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/clients/${testClientId}"
			},
			"expectedResponse": {
				"statusCode": 204
			}
		},
		{
			"id": "removeClient_NotFound",
			"setup": ["getRandomClientId"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/clients/${testClientId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 404
			}
		},










		{
			"id": "getEnvConfigById_Success",
			"setup": ["getRandomConfigNames", "createGenericEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": {
					"id": "${configId}"
				}
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "getConfigById_NotFound",
			"setup": [],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config/0123456789abcdef01234567"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 404
			},
			"teardown": []
		},
		{
			"id": "getConfigById_BadRequest",
			"setup": [],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config/fnord"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400
			},
			"teardown": []
		},
		{
			"id": "getConfigById_Unauthorized",
			"setup": [],
			"request": {
				"templates": ["base", "json"],
				"method": "GET",
				"resource": "/config/0123456789abcdef01234567"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 401
			},
			"teardown": []
		},
		{
			"id": "getConfigById_NonOwner_Success",
			"setup": ["getRandomConfigNames", "createGenericEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "nonAdminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": {
					"id": "${configId}"
				}
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "getAppConfigById_Success",
			"setup": ["getAdminToken", "getRandomConfigNames", "createGenericApplicationConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": {
					"id": "${configId}"
				}
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "createGenericEnvironmentConfig_Success",
			"setup": ["getRandomConfigNames"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postEnvironmentConfigBody1"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["createdConfig"]
			},
			"actions": [{
				"$set": {
					"configId": {
						"$replace": {
							"value": {
								"$extract": "headers.location"
							},
							"regex": "^.*/config/(.*)$",
							"replacement": "$1"
						}
					}
				}
			}],
			"teardown": ["verifyConfigCreated", "removeConfig"]
		},
		{
			"id": "createGenericEnvironmentConfig_BadRequest",
			"setup": [],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postInvalidConfigBody"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400
			},
			"teardown": []
		},
		{
			"id": "createGenericEnvironmentConfig_Unauthorized",
			"setup": ["getRandomConfigNames"],
			"request": {
				"templates": ["base", "json", "postEnvironmentConfigBody1"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 401
			},
			"teardown": []
		},
		{
			"id": "updateConfigById_Success",
			"setup": ["getRandomConfigNames", "createGenericEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "putConfigBody"],
				"method": "PUT",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": [],
				"statusCode": 204
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "updateConfigById_BadRequest",
			"setup": ["getRandomConfigNames", "createGenericEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "putInvalidConfigBody"],
				"method": "PUT",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "updateConfigByMismatchedId_BadRequest",
			"setup": ["getRandomConfigNames", "createGenericEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "putConfigBody"],
				"method": "PUT",
				"resource": "/config/fnord"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "updateConfigById_Unauthorized",
			"setup": ["getRandomConfigNames", "createGenericEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "putConfigBody"],
				"method": "PUT",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 401
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "updateConfigById_Forbidden",
			"setup": ["getRandomConfigNames", "createGenericEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "nonAdminAuthTokenHeader", "putConfigBody"],
				"method": "PUT",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 403
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "updateConfigById_NotFound",
			"setup": ["getRandomConfigNames", "createGenericEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "putNonExistentConfigBody"],
				"method": "PUT",
				"resource": "/config/${nonExistentConfigId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 404
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "updateOwnerOfConfigById_Success",
			"setup": ["getRandomConfigNames", "createGenericEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "putConfigBody"],
				"method": "PUT",
				"resource": "/config/${configId}",
				"body": {
					"owner": "${nonAdminClientId}"
				}
			},
			"expectedResponse": {
				"templates": [],
				"statusCode": 204
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "updateOwnerOfConfigById_BadRequest",
			"setup": ["getRandomConfigNames", "createGenericEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "putConfigBody"],
				"method": "PUT",
				"resource": "/config/${configId}",
				"body": {
					"owner": "fnord"
				}
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "removeConfigById_Success",
			"setup": ["getRandomConfigNames", "createGenericEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": [],
				"statusCode": 204
			},
			"teardown": ["verifyConfigDeleted"]
		},
		{
			"id": "removeConfigById_NotFound",
			"setup": [],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/config/${nonExistentConfigId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 404
			},
			"teardown": []
		},
		{
			"id": "removeConfigById_Unauthorized",
			"setup": ["getRandomConfigNames", "createGenericEnvironmentConfig"],
			"request": {
				"templates": ["base", "json"],
				"method": "DELETE",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 401
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "removeConfigById_Forbidden",
			"setup": ["getRandomConfigNames", "createGenericEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "nonAdminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 403
			},
			"teardown": ["removeConfig"]
		},










		{
			"id": "getAllConfig_Success",
			"setup": [],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200
			}
		},
		{
			"id": "getConfigByName_Success",
			"setup": ["getRandomConfigNames", "createEnvironmentConfig1"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config?names=${configName1}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": { "$length": 1 }
			},
			"teardown": ["removeEnvironmentConfig1"]
		},
		{
			"id": "getConfigByMultipleNames_Success",
			"setup": ["getRandomConfigNames", "createEnvironmentConfig1", "createEnvironmentConfig2"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config?names=${configName1}&names=${configName2}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": { "$length": 2 }
			},
			"teardown": ["removeEnvironmentConfig1", "removeEnvironmentConfig2"]
		},
		{
			"id": "getConfigByNameAndEnvAssociation_Success",
			"setup": ["getRandomConfigNames", "createEnvironmentConfig1", "createEnvironmentConfig2"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config?names=${configName1}&names=${configName2}&associations=environment|dev"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": { "$length": 1 }
			},
			"teardown": ["removeEnvironmentConfig1", "removeEnvironmentConfig2"]
		},
		{
			"id": "getConfigByNameAndAppAssociation_Success",
			"setup": ["getRandomConfigNames", "createApplicationConfig1", "createApplicationConfig2"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config?names=${configName1}&names=${configName2}&associations=application|myapp|1.0.0"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": { "$length": 1 }
			},
			"teardown": ["removeApplicationConfig1", "removeApplicationConfig2"]
		},
		{
			"id": "getConfigByNameAndIsActiveTrue_Success",
			"setup": ["getRandomConfigNames", "createApplicationConfig1", "createApplicationConfig3"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config?names=${configName1}&names=${configName3}&isActive=true"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": { "$length": 1 }
			},
			"teardown": ["removeApplicationConfig1", "removeApplicationConfig3"]
		},
		{
			"id": "getConfigByNameAndIsActiveFalse_Success",
			"setup": ["getRandomConfigNames", "createApplicationConfig1", "createApplicationConfig3"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config?names=${configName1}&names=${configName3}&isActive=false"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": { "$length": 1 }
			},
			"teardown": ["removeApplicationConfig1", "removeApplicationConfig3"]
		},
		{
			"id": "getNonsensitiveConfigWithoutToken_Success",
			"setup": ["getRandomConfigNames", "createApplicationConfig1", "createApplicationConfig2"],
			"request": {
				"templates": ["base", "json"],
				"method": "GET",
				"resource": "/config?names=${configName1}&names=${configName2}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": { "$length": 1 }
			},
			"teardown": ["removeApplicationConfig1", "removeApplicationConfig2"]
		},
		{
			"id": "getConfigByNonExistentName_Success",
			"setup": ["getRandomConfigNames", "createApplicationConfig1", "createApplicationConfig3"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config?names=somenonexixtentname1234567890"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": { "$length": 0 }
			},
			"teardown": ["removeApplicationConfig1", "removeApplicationConfig3"]
		},
		{
			"id": "getConfigMalformedQueryStringParams_BadRequest",
			"setup": ["getRandomConfigNames", "createApplicationConfig1", "createApplicationConfig3"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config?names=${configName1}&associations=fnord"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400
			},
			"teardown": ["removeApplicationConfig1", "removeApplicationConfig3"]
		},
		{
			"id": "getConfigEmptyQueryStringParams_BadRequest",
			"setup": ["getRandomConfigNames", "createApplicationConfig1", "createApplicationConfig3"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config?names="
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400
			},
			"teardown": ["removeApplicationConfig1", "removeApplicationConfig3"]
		},
		{
			"id": "getConfigDuplicateQueryStringParams_BadRequest",
			"setup": ["getRandomConfigNames", "createApplicationConfig1", "createApplicationConfig3"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config?names=${configName1}&associations=application|myapp|1.0.0&associations=application|myapp|1.0.0"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400
			},
			"teardown": ["removeApplicationConfig1", "removeApplicationConfig3"]
		},
		{
			"id": "getConfigUnrecognizedAssociation_BadRequest",
			"setup": ["getRandomConfigNames", "createApplicationConfig1", "createApplicationConfig3"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config?names=${configName1}&unrecognized=fnord"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400
			},
			"teardown": ["removeApplicationConfig1", "removeApplicationConfig3"]
		}
	]
}